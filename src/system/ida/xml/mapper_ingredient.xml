<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그 선언 -->
<mapper namespace="system.ida.dao.IngredientDAO">
	<sql id="ingredientWhere">
			<if test="keyword!=null and keyword.length()>0">
					and (
						upper(i_no) like upper('%${keyword}%')
						upper(s_no) like upper('%${keyword}%')
						<!-- 서브쿼리로 인해 띄우는 것들 먹게 하는 방법 -->
						or upper(ia_name) like upper('%${keyword}%')
						or upper(ib_name) like upper('%${keyword}%')
						or upper(io_name) like upper('%${keyword}%')
						<!-- ============================= -->
						or upper(i_size) like upper('%${keyword}%')
						or upper(i_price) like upper('%${keyword}%')
						or upper(reg_date) like upper('%${keyword}%')	
					)
			</if>
			<if test="search_condition!=null and search_condition.length>0">
			and
			<!-- ================================================ -->
			<!-- [mybatis foreach 반복문]의 속성 설명 -->
			<!-- ================================================ -->
			<!-- collection="배열/List 객체의 속성변수명" -->
			<!-- item="배열 또는 List 객체 안의 데이터를 저장할 지역변수명" -->
			<!-- open="반복문 시작 전에 삽입할 문자" -->
			<!-- close="반복문 끝난 후에 삽입할 문자" -->
			<!-- separator="반복문에 의해 표현되는 쿼리문 사이사이에 삽입될 쿼리일부분" -->
			<!-- index="반복문 안에서 사용할 인덱스 번호 저장 변수명" -->
			<foreach collection="search_condition" item="xxx" open="(" separator=" or " close=")">
				<if test="xxx.equals('week')">
					to_char(sysdate,'ww') = to_char(reg_date,'ww')
				</if>
				<if test="xxx.equals('month')">
					to_char(sysdate,'YYYYMM') = to_char(reg_date,'YYYYMM')
				</if>					
				<if test="xxx.equals('hour')">
					to_char(sysdate,'YYYYMMDDHH') = to_char(reg_date,'YYYYMMDDHH')
				</if>					
				<if test="xxx.equals('quarter')">
					to_char(sysdate,'Q') = to_char(reg_date,'Q')
				</if>
			</foreach>
			</if>
	</sql>
	
	<!-- 가게에 등록된 식자재 목록을 가져오는 select 태그 -->
	<select id="getIngredientList" parameterType="system.ida.dto.IngredientSearchDTO" resultType="system.ida.dto.IngredientDTO">
		select
			i.i_no as "i_no"
			<!-- ,i.ia_code as "ia_code" -->
			,(select a.ia_name from code_ingredient_alpha a where a.ia_code=i.ia_code) as  "ia_name"
			,(select b.ib_name from code_ingredient_beta b where b.ib_code=i.ib_code) as "ib_name"
			,(select o.io_name from code_ingredient_origin o where o.io_code=i.io_code) as"io_name"
			,i.i_name as  "i_name"
			,i.i_size as  "i_size"
			,to_char(i.i_price, '9,999,999,999')  as  "i_price"
			,to_char(i.reg_date,'YYYY-MM-DD(dy) HH12:MI:SS') as   "reg_date"
			,i.is_del   as  "is_del"
			
		from ingredient i 
		where i.is_del = 'F'
			and s_no = (select s_no from store where s_id=#{s_id})
			<include refid="ingredientWhere"/>
	</select>
	
	<!-- 등록된 식자재의 총 개수를 구하는 select 태그 -->
	<select id="getIngredientListAllCnt" parameterType="system.ida.dto.IngredientSearchDTO" resultType="int">
		select
			count(*)
		from
		ingredient
		where is_del='F'
		and s_no = (select s_no from store where s_id = #{s_id})
		<include refid="ingredientWhere"/>
	</select>
	
	
	<!-- 대분류 목록을 검색하는 select 태그 -->
	<select id='getCodeIngAlpha' resultType="system.ida.dto.Code_IngredientAlphaDTO">
		select
			 ia_name as "ia_name"
		from
			code_ingredient_alpha
	</select>
	
	<!-- 소분류 목록을 검색하는 select 태그 -->
	<select id='getCodeIngBeta' resultType="system.ida.dto.Code_IngredientBetaDTO">
		select
			 ib_name
		from
			code_ingredient_beta
	</select>
	

	<!-- 원산지 목록을 검색하는 select 태그 -->
	<select id='getCodeIngOrigin' resultType="system.ida.dto.Code_IngredientOriginDTO">
		select
			 io_name
		from
			code_ingredient_origin
	</select>
	
	<!-- 알레르기 목록을 검색하는 select 태그 -->
	<select id='getCodeIngAllergie' resultType="system.ida.dto.Code_IngredientAllergieDTO">
		select
			 a_name
		from
			code_allergie
	</select>
	
	<!-- 식자재 insert -->
	<insert id="insertIngredient" parameterType="system.ida.dto.IngredientDTO">
	insert 
		 into ingredient(
			i_no
			,ia_code
			,ib_code
			,io_code
			,i_name
			,i_size
			,i_price
			,s_no
		)values(
			(select nvl(max(i_no),0)+1 from ingredient)
			,(select ia_code from code_ingredient_alpha where ia_name=#{ia_name})
			,(select ib_code from code_ingredient_beta where ib_name=#{ib_name})
			,(select io_code from code_ingredient_origin where io_name=#{io_name})
			,#{i_name}
			,#{i_size}
			,to_number(#{i_price}, 9999999999)
			,(select s_no from store where s_id=#{s_id})
		)
	</insert>
	
	
	<insert id="insertIngredientRecord" parameterType="system.ida.dto.IngredientDTO">
		insert into ingredient_record(
			i_no
			,i_price
		) values (
			(select nvl(max(i_no),0)+1 from ingredient_record where i_no=${i_no})
			,to_number(${i_price}, 9999999999)
		)
	</insert>
	
	<insert id="insertIngredientAllergie" parameterType="system.ida.dto.IngredientDTO">
		insert into ingredient_allergie(
			i_no
			,a_code
		) values(
			(select nvl(max(i_no),0)+1 from ingredient_allergie where i_no=${i_no})
			,${a_code}
		
		)
		
	</insert>
	
	<!-- 식자재 update -->
	<update id="updateIngredient" parameterType="system.ida.dto.IngredientDTO">
		update ingredient set
		ia_code=(select ia_code from code_ingredient_alpha where ia_name=#{ia_name})
		,ib_code=(select ib_code from code_ingredient_beta where ib_name=#{ib_name})
		,io_code=(select io_code from code_ingredient_origin where io_name=#{io_name})
		,i_name  = #{i_name}
		,i_size  = #{i_size}
		,i_price = to_number(${i_price}, 9999999999)
		where i_no = ${i_no}
	</update>
	
	<insert id="updateIngredientRecord" parameterType="system.ida.dto.IngredientDTO">
		insert into ingredient_record(
			i_no
			,i_price
		) values (
			${i_no}
			,to_number(${i_price}, 9999999999)
		)
	
	</insert>
	
	<!-- 식자재 삭제  -->
	<update id="deleteIngredient" parameterType="hashmap">
		update ingredient set
		is_del = 'T'
		where i_no = ${i_no}
	</update>
	
	
	
	<select id="getInsertedIngredientCnt" parameterType="system.ida.dto.IngredientDTO" resultType="int">
		select 
			count(*)
		from ingredient 
		where is_del = 'F'
	</select>
	
	


	
<!--  삭제한 식자재 기록하기 
	<insert id="deleteIngRecord" parameterType="hashmap">
		insert into ingredient_record(
			i_no
			,i_price
		) values (
			(select i_no from ingredient where i_no=${i_no} and is_del='T')
			,to_number(${i_price}, 9999999999)
		)
	</insert> -->
	
	<select id="getWeekIngredientData" parameterType="system.ida.dto.ChartSearchDTO" resultType="hashmap">

               select  
             sss.dataset  "DATASET",  sss.label "LABEL",  nvl(www.i_price,0)||'' "DATA"
        from
        (
           select         distinct
               ww.week||'주' "DATASET", ss.i_name "LABEL"
            from
            (
              select         distinct
                  i.s_no    as "S_NO"
                  ,  i.i_name    as "I_NAME"
                  , to_char(to_date(to_char(i.reg_date,'yyyymmdd'),'yyyymmdd'), 'w')    as "REG_DATE"
                  , ir.i_price    as "I_PRICE"
              from
                  ingredient i, ingredient_record ir
              where
                i.i_no = ir.i_no 
                and i.is_del = 'F' 
            ) ss   
            ,(
              select '1' "WEEK" from dual
              union select '2' from dual
              union select '3' from dual
              union select '4' from dual
              union select '5' from dual  
            ) ww    
        ) sss
        ,
        (
        select         distinct    
            i.s_no    as "S_NO"
            ,  i.i_name    as "I_NAME"
            , to_char(to_date(to_char(i.reg_date,'yyyymmdd'),'yyyymmdd'), 'w')    as "REG_DATE"
            , ir.i_price    as "I_PRICE"
        from
            ingredient i, ingredient_record ir
        where
            i.i_no = ir.i_no 
            and i.is_del = 'F' 
        ) www  
       where  sss.label=www.i_name(+) and sss.dataset=www.reg_date(+)||'주' and sss.dataset=${week}||'주'  
       order by nvl(www.i_price,0) desc, 1, 2
	</select>
	
	
	<select id="getMonthIngredientData" parameterType="system.ida.dto.ChartSearchDTO" resultType="hashmap">
	select 
          rownum "RNUM", iiii.label "LABEL", iiii.dataset "DATASET", iiii.data "DATA"
         from
         (
           select
               iii.label "LABEL", iii.dataset "DATASET", nvl(www.i_price,0)||'' "DATA"
           from
           (              
             select
               mm.month||'월' "DATASET", ii.i_name "LABEL"
             from
               (
                 select
                     i.s_no    as "S_NO"
                     , i.i_name    as "I_NAME"
                     , to_char(to_date(to_char(ir.reg_date,'yyyymmdd'),'yyyymmdd'), 'yyyymm')    as "REG_DATE"
                     , ir.i_price    as "I_PRICE"
                 from
                     ingredient i, ingredient_record ir
                 where
                   i.i_no = ir.i_no
                   and i.is_del = 'F'  
               ) ii  
               ,
               (
                 select '1' "MONTH" from dual
                 union select '2' from dual
                 union select '3' from dual
                 union select '4' from dual
                 union select '5' from dual   
                 union select '6' from dual
                 union select '7' from dual
                 union select '8' from dual
                 union select '9' from dual 
                 union select '10' from dual
                 union select '11' from dual
                 union select '12' from dual
               ) mm       
               where ii.s_no=(select s_no from store where s_id=#{s_id}) and <![CDATA[ mm.month<=substr(ii.reg_date(+),5,2) ]]>
             ) iii         
             ,
             (
                 select
                     i.s_no    as "S_NO"
                     , i.i_name    as "I_NAME"
                     , to_char(to_date(to_char(ir.reg_date,'yyyymmdd'),'yyyymmdd'), 'yyyymm')    as "REG_DATE"
                     , nvl(ir.i_price,0)    as "I_PRICE"
                 from
                     ingredient i, ingredient_record ir
                 where
                   i.i_no = ir.i_no
                   and i.is_del = 'F'
                   and i.s_no=(select s_no from store where s_id=#{s_id})
             ) www    
            where  iii.label=www.i_name(+) and iii.dataset=to_number(substr(www.reg_date(+),5,2))||'월' and iii.dataset=#{month}||'월' and substr(www.reg_date(+),1,4)=#{year}
            group by iii.label,iii.dataset  
            having <![CDATA[ nvl(www.i_price,0)>=0]]>
            order by nvl(www.i_price,0) desc, 2, 1              
          ) iiii     
        where <![CDATA[ rownum<=${chart_cnt}]]>          
	</select>
	
	
	
	<select id="getAllQuarterIngredientData" resultType="hashmap">
		select 
		    q.quarter||'분기' "LABEL", 
		    nvl(sum(ir.i_price),0)||''  "DATA"
		from 
		    ingredient_record ir,
		    (
		    select '1' "QUARTER" from dual
		    union select '2' from dual
		    union select '3' from dual
		    union select '4' from dual
		    )  q                 
		where q.quarter=to_char(ir.reg_date(+),'Q') and to_char(ir.reg_date(+),'YYYY')=to_char(sysdate,'YYYY')-1
		group by q.quarter
		order by 1
	
	</select>

	<select id="getIngAnlList" parameterType="system.ida.dto.IngredientSearchDTO" resultType="system.ida.dto.IngredientDTO">
		select
			i.i_no as "i_no"
			<!-- ,i.ia_code as "ia_code" -->
			,(select a.ia_name from code_ingredient_alpha a where a.ia_code=i.ia_code) as  "ia_name"
			,(select b.ib_name from code_ingredient_beta b where b.ib_code=i.ib_code) as "ib_name"
			,(select o.io_name from code_ingredient_origin o where o.io_code=i.io_code) as"io_name"
			,i.i_name as  "i_name"
			,i.i_size as  "i_size"
			,to_char(i.i_price, '9,999,999,999')  as  "i_price"
			,to_char(i.reg_date,'YYYY-MM-DD(dy) hh12:mi:ss') as   "reg_date"
			,i.is_del   as  "is_del"
			
		from ingredient i 
		where i.is_del = 'F'
			and s_no = (select s_no from store where s_id=#{s_id})
			<include refid="ingredientWhere"/>
	</select>
	
	
	<select id="getIngedientDTO" parameterType="int" resultType="system.ida.dto.IngredientDTO">
		select
			i.i_no as "i_no"
			,(select a.ia_name from code_ingredient_alpha a where a.ia_code=i.ia_code) as  "ia_name"
			,(select b.ib_name from code_ingredient_beta b where b.ib_code=i.ib_code) as "ib_name"
			,(select o.io_name from code_ingredient_origin o where o.io_code=i.io_code) as"io_name"
			,i.i_name as  "i_name"
			,i.i_size as  "i_size"
			,to_char(i.i_price, '9,999,999,999')  as  "i_price"
			,to_char(i.reg_date,'yyyy-mm-dd(dy) hh:mi') as   "reg_date"
			,i.is_del   as  "is_del"
			
		from ingredient i 
		where i.is_del = 'F'
			and i_no = #{i_no}
	
	</select>
</mapper>