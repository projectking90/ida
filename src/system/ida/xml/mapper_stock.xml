<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그 선언 -->
<mapper namespace="system.ida.dao.StockDAO">
	<!--검색 : 재고번호, 대분류 ,소분류, 원산지, 식자재명, 규격, 재고수량, 재고상태, 날짜, 가격-->
	<select id="getStockList" resultType="system.ida.dto.StockDTO">
		select
    		st.st_no as "st_no"
    		,(select ia.ia_name from code_ingredient_alpha ia where ia.ia_code=(select i.ia_code from ingredient i where i.i_no=st.i_no)) as "ia_name"
    		,(select ib.ib_name from code_ingredient_beta ib where ib.ib_code=(select i.ib_code from ingredient i where i.i_no=st.i_no))  as "ib_name"
    		,(select io.io_name from code_ingredient_origin io where io.io_code=(select i.io_code from ingredient i where i.i_no=st.i_no))  as "io_name"
			,(select i.i_name from ingredient i where i.i_no=st.i_no) as "i_name"
			,(select i.i_size from ingredient i where i.i_no=st.i_no) as "i_size"
			,st.quantity as "quantity"
			,st.st_state as "st_state"
            ,to_char(st.reg_date, 'yyyy-mm-dd(dy) hh:mi') as "reg_date"
			,to_char((select i.i_price from ingredient i where i.i_no=st.i_no), '9,999,999,999') as "i_price"
		from stock st
		where st.is_del='F'
			and st.i_no in (select i.i_no from ingredient i where i.s_no=(select s.s_no from store s where s.s_id=#{s_id}))
	</select>
		
	<select id="getIngredientList" resultType="system.ida.dto.IngredientDTO">
		select
			i_no "i_no"
			,i_name "i_name"
		from ingredient i
		where i.is_del='F'
			and i.s_no=(select s.s_no from store s where s.s_id=#{s_id})
	</select>
	
	<insert id="insertStock" parameterType="system.ida.dto.StockDTO">
		insert into stock(
			st_no
			,i_no
			,quantity
			,st_state
		) values (
			(select nvl(max(st_no),0)+1 from stock)
			,${i_no}
			,${quantity}
			,#{st_state}
		)
	</insert>
		
	<update id="updateStock" parameterType="hashmap">
		update
			stock
		set
			quantity = ${quantity}
			,st_state = #{st_state}
		where
			st_no = ${st_no}
	</update>
			
	<update id="deleteStock" parameterType="hashmap">
		update
			stock
		set
			is_del='T'
			, quantity=0
		where
			st_no = ${st_no}
	</update>
	
	<select id="getInsertedStockCnt" parameterType="system.ida.dto.StockDTO" resultType="int">
		select
			count(*)
		from 
			stock st
		where
			st.i_no in (select i.i_no from ingredient i where i.s_no=(select s.s_no from store s where s.s_id=#{s_id})) and st.i_no=${i_no}
	</select>	
	
	<select id="getInsertedStockIsDelCnt" parameterType="system.ida.dto.StockDTO" resultType="int">
		select
			count(*)
		from 
			stock
		where is_del='T'
	</select>
	
	<update id="getInsertedStockIsDelUp"  parameterType="system.ida.dto.StockDTO">
		update
			stock
		set
			is_del='F'
			,st_state = #{st_state}
			,quantity = ${quantity}
		where
			is_del='T'
			and i_no = ${i_no}
	</update>
	
	<insert id="deleteStockRecord" parameterType="hashmap">
		insert into stock_record(
			st_no
			,quantity
		) values (
			${st_no}
			,(select sum(quantity)*(-1) from stock_record where st_no=${st_no})
		)
	</insert>
		
	<insert id="insertStockRecord" parameterType="system.ida.dto.StockDTO">
		insert into stock_record(
			st_no
			,quantity
		) values (
			(select st_no from stock where i_no=${i_no})
			,${quantity}
		)
	</insert>
	
	<select id="getInsertedStockQuantityCnt" parameterType="hashmap" resultType="int">
		select 
			quantity
		from 
			stock
		where st_no=${st_no}
	</select>
	
	<insert id="updateStockRecord" parameterType="hashmap">
		insert into stock_record(
			st_no
			,quantity
		)values(
			${st_no}
			,${change_quantity}
		)
	</insert>
	<select id='getWeekData' parameterType="string" resultType="hashmap">
		select
		     ss.i_name "LABEL", nvl(sum(ss.quantity),0)||'' "DATA"
		from
		    (
		    select
		        i.s_no	as "S_NO"
		        , i.i_name	as "I_NAME"
		        , to_char(to_date(to_char(i.reg_date,'yyyymmdd'),'yyyymmdd'), 'w')	as "REG_DATE"
		        , sr.quantity	as "QUANTITY"
		    from
		        ingredient i, stock s, stock_record sr
		    where
		        i.i_no = s.i_no
		        and s.st_no = sr.st_no
		        and s.is_del = 'F' 
		    ) ss     
		where 
		    ss.s_no = (select s_no from store where s_id=#{s_id})
		group by                                       
		   i_name
		order by nvl(sum(ss.quantity),0) desc
	</select>


	<select id="getStockAnlList" resultType="system.ida.dto.StockDTO">
        select 
            si.s_no "S_NO",
            ia.ia_name "IA_NAME", 
            ib.ib_name "IB_NAME",
            io.io_name "IO_NAME",
            si.i_name "I_NAME",
            i.i_size "I_SIZE",
            TO_CHAR(si.reg_date, 'yyyy-mm-dd(dy) hh:mi') "REG_DATE",
            sI.quantity "QUANTITY",
            to_char(i.i_price, '9,999,999,999') "I_PRICE"
        from stock_ingredient si, ingredient i, code_ingredient_alpha ia, code_ingredient_beta ib, code_ingredient_origin io
        where i.i_name=si.i_name and ia.ia_code=i.ia_code and ib.ib_code=i.ib_code and io.io_code=i.io_code and i.s_no=(select s.s_no from store s where s.s_id=#{s_id})
	</select>
</mapper>